:fu fib_On(n)
    a := 0
    b := 1
    i := 1
    :while i <= n :do
        tmp := b
        b = b + a
        a = tmp
        i = i + 1
    :end
    :return b
:end

:fu fib_On_mat(n)
    M := [0, 1; 1, 1]
    v := [0, 1]
    i := 1
    :while i <= n :do
        v := v * M
        i = i + 1
    :end
    :return v[2]
:end

:fu fib_Ologn_mat(n)
    M := [0, 1; 1, 1]
    v := [0, 1]
    :while n :do
        :if n % 2 :then
            v = v * M
            n = n - 1
        :end
        n = n / 2
        M = M * M
    :end
    :return v[2]
:end

:fu collect(f, n)
    v := Mat(1, n)
    i := 1
    :while i <= n :do
        v[i] = f(i)
        i = i + 1
    :end
    :return v
:end

N = 15
"iterative algorithm, O(N)"
collect(fib_On,        N)
"vector-matrix multiplication, O(N)"
collect(fib_On_mat,    N)
"vector-matrix multiplication, O(log N)"
collect(fib_Ologn_mat, N)
